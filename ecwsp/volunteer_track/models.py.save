from django.db import models

class Hours(models.Model):
    class Meta:
	verbose_name = "Hours"
	verbose_name_plural = "Hours"
	unique_together = ("student","date")
    student = models.CharField(max_length=192)
    date = models.DateField()
    hours = models.FloatField()
    time_stamp = models.DateTimeField()
    def __unicode__(self):
	return self.hours

class Site(models.Model):
    site_name = models.CharField(max_length=1536, blank=True)
    site_address = models.CharField(max_length=1536, blank=True)
    site_city = models.CharField(max_length=768, blank=True)
    site_state = models.CharField(max_length=30, blank=True)
    site_zip = models.CharField(max_length=30, blank=True) # Field name made lowercase.
    def __unicode__(self):
	return self.site_name

class SiteSupervisor(models.Model):
    name = models.CharField(max_length=200, blank=True)
    phone = models.CharField(max_length=40, blank=True)
    email = models.TextField(blank=True)
    job_description = models.TextField(blank=True)
    def __unicode__(self):
	return self.name

class Volunteer(models.Model):
    student = models.OneToOneField('sis.Student') #string so that it looks up sis.Student after the fact.
e    site_approval = models.CharField(max_length=16, choices=(('Accepted','Accepted'),('Rejected', 'Rejected'),('Submitted', 'Submitted'),('Resubmitted', 'Resubmitted')), blank=True)
    attended_reflection = models.BooleanField()
    contract = models.BooleanField()
    hours_required = models.IntegerField()
    hours_record = models.CharField(max_length=39)
    hours_completed = models.FloatField()
    comment = models.TextField(blank=True)
    notes = models.TextField(blank=True)
    last_updated = models.DateTimeField()
    def __unicode__(self):
	return self.student

#check to see if they are a volunteer - if not, create volunteer
